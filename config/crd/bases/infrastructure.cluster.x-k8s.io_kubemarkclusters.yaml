---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: kubemarkclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KubemarkCluster
    listKind: KubemarkClusterList
    plural: kubemarkclusters
    shortNames:
    - kmc
    singular: kubemarkcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .metadata.labels['cluster\.x-k8s\.io/cluster-name']
      name: Cluster
      type: string
    - description: KubemarkCluster ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Time duration since creation of KubemarkCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: KubemarkCluster define a minimal cluster infrastructure specifically
          designed to be used for Cluster API scale tests, autoscaler tests or development.
          Do not use it in production.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubemarkClusterSpec define spec for a KubemarkCluster.
            properties:
              backingCluster:
                description: 'BackingCluster defined the cluster where to host pods
                  running kubemark. If empty, pods running kubemark will be created
                  in the management cluster, in the same namespace of the cluster
                  resource. TODO: support service type Loadbalancer, adding an ingress
                  in front of the service, (TBD if one or both, but it is required
                  a solution for making remote backing cluster accessible from the
                  management cluster)'
                properties:
                  namespace:
                    description: 'Namespace defines namespace where to host pods running
                      kubemark. If empty the namespace of the kubeconfig will be used
                      as a default. Note: it is not supported using the same backing
                      namespace for two clusters with the same name.'
                    type: string
                  secretRef:
                    description: 'SecretRef is the reference to a secret with a `kubeconfig`
                      value providing the kubeconfig for accessing to the BackingCluster.
                      TODO: document RBAC rules required to work in the BackingCluster.
                      TODO: consider if to rename KubeConfigSecretRef TODO: validation
                      (mandatory if BackingClusterSpec is defined; cannot be changed
                      if the KubemarkCluster is ready)'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              controlPlaneEndpoint:
                description: 'ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. Note: it is not supported providing
                  either controlPlaneEndpoint host or port. TODO: support users providing
                  controlPlaneEndpoint host or port.'
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                type: object
            type: object
          status:
            description: KubemarkClusterStatus define status for a KubemarkCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the KubeadmCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready denotes that the docker cluster (infrastructure)
                  is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
