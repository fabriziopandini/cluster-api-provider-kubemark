---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: kubemarkclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KubemarkClusterTemplate
    listKind: KubemarkClusterTemplateList
    plural: kubemarkclustertemplates
    shortNames:
    - kmct
    singular: kubemarkclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of DockerClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: KubemarkClusterTemplate define a template for KubemarkCluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubemarkClusterTemplateSpec define spec for a KubemarkClusterTemplate.
            properties:
              template:
                description: KubemarkClusterTemplateResource defines a template resource
                  for a KubemarkClusterTemplate.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: KubemarkClusterSpec define spec for a KubemarkCluster.
                    properties:
                      backingCluster:
                        description: 'BackingCluster defined the cluster where to
                          host pods running kubemark. If empty, pods running kubemark
                          will be created in the management cluster, in the same namespace
                          of the cluster resource. TODO: support service type Loadbalancer,
                          adding an ingress in front of the service, (TBD if one or
                          both, but it is required a solution for making remote backing
                          cluster accessible from the management cluster)'
                        properties:
                          namespace:
                            description: 'Namespace defines namespace where to host
                              pods running kubemark. If empty the namespace of the
                              kubeconfig will be used as a default. Note: it is not
                              supported using the same backing namespace for two clusters
                              with the same name.'
                            type: string
                          secretRef:
                            description: 'SecretRef is the reference to a secret with
                              a `kubeconfig` value providing the kubeconfig for accessing
                              to the BackingCluster. TODO: document RBAC rules required
                              to work in the BackingCluster. TODO: consider if to
                              rename KubeConfigSecretRef TODO: validation (mandatory
                              if BackingClusterSpec is defined; cannot be changed
                              if the KubemarkCluster is ready)'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      controlPlaneEndpoint:
                        description: 'ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane. Note: it is
                          not supported providing either controlPlaneEndpoint host
                          or port. TODO: support users providing controlPlaneEndpoint
                          host or port.'
                        properties:
                          host:
                            description: Host is the hostname on which the API server
                              is serving.
                            type: string
                          port:
                            description: Port is the port on which the API server
                              is serving.
                            type: integer
                        type: object
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
